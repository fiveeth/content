server:
  port: 9090
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      max-active: 100
      test-while-idle: true
      validation-query: SELECT 1
      min-evictable-idle-time-millis: 300000 # 5分鐘空閑則回收
  application:
    name: content-center #服务名
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
        cluster-name: GZ
        metadata:
          version: v1 #自己这个实例的版本
          target-version: v1 #允许调用的提供者版本（白话文：v1版本的内容中心允许调用哪个版本的用户中心）
        #namespace: 8c078bf1-4864-4413-b300-de6b605635a6 #调用不能跨namespace
    sentinel:
      filter:
        # sentinel对spring mvc端点的保护
        enabled: true
      transport:
        # 指定sentinel控制台的地址（sentinel默认是懒加载的）
        dashboard: localhost:8080
      web-context-unify: false #Sentinel 1.7.0 版本开始（对应 SCA 2.1.1.RELEASE)，我们在 CommonFilter 引入了 WEB_CONTEXT_UNIFY 这个 init parameter，用于控制是否收敛 context。将其配置为 false 即可根据不同的 URL 进行链路限流。
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      bindings:
        output:
          #用来指定topic
          destination: stream-test-topic
#配置细粒度的Ribbon规则（配置属性方式）,这里指定了客户端
user-center:
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机
    #    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosWeightedRule #权重
    #    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosSameClusterWeightedRule #同一集群优先调用且适配权重
    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosFinalRule #优先选择同集群下，符合metadata的实例，如果没有，就选择所有集群下，符合metadata的实例
ribbon:
  eager-load:
    enabled: true #设置为饥饿加载。默认是false，也就是懒加载，故第一次请求的时候响应会比较慢
    clients: user-center #为那些名称的Ribbon客户端指定饥饿加载，多个用逗号分隔
logging:
  level:
    com.gyh.contentcenter.feignclient.UserCenterFeignClient: debug
    com.alibaba.nacos: error
#feign:
#  client:
#    config:
#      #Feign指定配置：配置方式(细粒度)
#      user-center:
#        loggerLevel: full
feign:
  sentinel:
    #为feign整合sentinel
    enabled: true
  client:
    config:
      default:
        loggerLevel: full
  httpclient:
    #让feign使用apache httpclient做请求，而不是默认的urlConnection
    enabled: true
    #feign的最大连接数
    max-connections: 200
    #feign单个路径的最大连接数
    max-connections-per-route: 50
#@SentinelRestTemplate注解开关
resttemplate:
  sentinel:
    enabled: false
#开启actuator监控（端点检查、健康检查）
management:
  endpoints:
    web:
      exposure:
        include: '*'
#AHAS相关依赖
#ahas:
#  license: 3f1adf832ebe44428228b64dce22615d
#  namespace: default
#project:
#  name: content-center
rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: test-group