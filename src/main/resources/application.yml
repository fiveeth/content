server:
  port: 9090
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      max-active: 100
      test-while-idle: true
      validation-query: SELECT 1
      min-evictable-idle-time-millis: 300000 # 5分鐘空閑則回收
  application:
    name: content-center
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
        cluster-name: GZ
        metadata:
          version: v1 #自己这个实例的版本
          target-version: v1 #允许调用的提供者版本（白话文：v1版本的内容中心允许调用哪个版本的用户中心）
        #namespace: 8c078bf1-4864-4413-b300-de6b605635a6 #调用不能跨namespace
#配置细粒度的Ribbon规则（配置属性方式）,这里指定了客户端
user-center:
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机
    #    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosWeightedRule #权重
    #    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosSameClusterWeightedRule #同一集群优先调用且适配权重
    NFLoadBalancerRuleClassName: com.gyh.contentcenter.config.NacosFinalRule #优先选择同集群下，符合metadata的实例，如果没有，就选择所有集群下，符合metadata的实例
ribbon:
  eager-load:
    enabled: true #设置为饥饿加载。默认是false，也就是懒加载，故第一次请求的时候响应会比较慢
    clients: user-center #为那些名称的Ribbon客户端指定饥饿加载，多个用逗号分隔
logging:
  level:
    com.gyh.contentcenter.feignclient.UserCenterFeignClient: debug
#feign:
#  client:
#    config:
#      #Feign指定配置：配置方式(细粒度)
#      user-center:
#        loggerLevel: full
feign:
  client:
    config:
      default:
        loggerLevel: full
  httpclient:
    #让feign使用apache httpclient做请求，而不是默认的urlConnection
    enabled: true
    #feign的最大连接数
    max-connections: 200
    #feign单个路径的最大连接数
    max-connections-per-route: 50